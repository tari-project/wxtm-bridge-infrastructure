Transform: AWS::Serverless-2016-10-31
AWSTemplateFormatVersion: "2010-09-09"

Parameters:
  Environment:
    Type: String
  HostedZoneId:
    Type: String
  Domain:
    Type: String
  CertificateArn:
    Type: String
  DbHost:
    Type: String
  DbSecret:
    Type: String
  DbName:
    Type: String
  AccessSecurityGroupId:
    Type: String
    Description: Security group to assing to lambdas
  Subnets:
    Type: String
    Description: Subnets to run lambdas in
  Auth0Domain:
    Type: String
  Auth0Audience:
    Type: String
  SubgraphSheduleValue:
    Type: Number
  SubgraphUrl:
    Type: String
  SubgraphSheduleUnit:
    Type: String
  ColdWalletSecret:
    Type: String

Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 60
    MemorySize: 512
    VpcConfig:
      SecurityGroupIds:
        - !Ref AccessSecurityGroupId
      SubnetIds: !Split [",", !Ref Subnets]
    Environment:
      Variables:
        ENVIRONMENT: !Ref Environment
        DATABASE_HOST: !Ref DbHost
        DATABASE_PORT: "5432"
        DATABASE_USERNAME: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref DbSecret
            - ":SecretString:username}}"
        DATABASE_PASSWORD: !Join
          - ""
          - - "{{resolve:secretsmanager:"
            - !Ref DbSecret
            - ":SecretString:password}}"
        DATABASE_NAME: !Ref DbName
        AUTH0_DOMAIN: !Ref Auth0Domain
        AUTH0_AUDIENCE: !Ref Auth0Audience
        SUBGRAPH_URL: !Ref SubgraphUrl
        COLD_WALLET_ADDRESS: !Sub "{{resolve:secretsmanager:${ColdWalletSecret}:SecretString:OneSidedAddress}}"

Resources:
  Api:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      MethodSettings:
        - ResourcePath: "/*"
          HttpMethod: "*"
      Domain:
        CertificateArn: !Ref CertificateArn
        DomainName: !Sub api.${Domain}
        Route53:
          HostedZoneId: !Ref HostedZoneId

  NestJsApp:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      CodeUri: ./wxtm-bridge-backend.zip
      Handler: out/app/app.app
      AutoPublishAlias: WxtmBackend

      Events:
        NestJs:
          Type: Api
          Properties:
            RestApiId: !Ref Api
            Path: /{whatever+}
            Method: ANY
      Policies:
        - Statement:
            - Action:
                - secretsmanager:GetSecretValue
              Effect: Allow
              Resource:
                - !Sub arn:aws:secretsmanager:*:*:secret:/wxtm-bridge/${Environment}/*
            - Action:
                - codedeploy:*
                - events:PutEvents
              Effect: "Allow"
              Resource: "*"

      DeploymentPreference:
        Type: AllAtOnce
        Hooks:
          PreTraffic: !Ref RunMigrations

  RunMigrations:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "CodeDeployHook_RunMigrations_${Environment}"
      CodeUri: ./wxtm-bridge-migrations.zip
      Handler: out/migrations/migrations.runMigrations
      Policies:
        Statement:
          - Effect: "Allow"
            Action:
              - codedeploy:*
            Resource: !Sub "arn:aws:codedeploy:${AWS::Region}:${AWS::AccountId}:deploymentgroup:${ServerlessDeploymentApplication}/*"
          - Effect: "Allow"
            Action:
              - secretsmanager:GetSecretValue
            Resource: !Sub "arn:aws:secretsmanager:*:*:secret:/wxtm-bridge/${Environment}/*"
          - Effect: "Allow"
            Action:
              - events:PutEvents
            Resource: "*"

      DeploymentPreference:
        Enabled: false

  SubgraphHandler:
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      CodeUri: ./wxtm-bridge-subgraph.zip
      Handler: out/subgraph/subgraph.handler
      AutoPublishAlias: SubgraphHandler

      Events:
        CronEvent:
          Type: Schedule
          Properties:
            Schedule: !Sub "rate(${SubgraphSheduleValue} ${SubgraphSheduleUnit})"
            Name: !Sub SubgraphShedule-${Environment}
            Description: Trigger Lambda

      Policies:
        - Statement:
            - Action:
                - secretsmanager:GetSecretValue
              Effect: Allow
              Resource:
                - !Sub arn:aws:secretsmanager:*:*:secret:/wxtm-bridge/${Environment}/*

      DeploymentPreference:
        Type: AllAtOnce

  BackendUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub /wxtm-bridge/${Environment}/urls/backend
      Type: String
      Value: !Sub https://api.${Domain}
