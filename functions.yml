Transform: AWS::Serverless-2016-10-31

Resources:
  RestrictAndRedirectFunction:
    Type: AWS::Serverless::Function
    Properties:
      InlineCode: |
        const password = 'OmNHRnVaVzVyWVRwdmIxUm9aaHM2MjM2NjI5MjkyNjI3Ng==';
        const handler = (event, context, callback, configPath) => {
          const request = event.Records[0].cf.request;
          const headers = request.headers;

          const restrictResponse = restrict(password, headers)
          if (restrictResponse) {
            callback(null, restrictResponse);
            return;
          }

          callback(null, request);
          return;
        }


        const restrict = (password, headers) => {

          // Construct the Basic Auth string
          const authString = 'Basic ' + password;

          // Require Basic authentication
          if (typeof headers.authorization == 'undefined' || headers.authorization[0].value != authString) {
            const body = 'Unauthorized';
            const response = {
              status: '401',
              statusDescription: 'Unauthorized',
              body: body,
              headers: {
                'www-authenticate': [{key: 'WWW-Authenticate', value: 'Basic'}]
              },
            };
            return response;
          }
          // Continue request processing if authentication passed
          return null
        };
        exports.handler = handler;

      Role: !GetAtt LambdaEdgeFunctionRole.Arn
      Runtime: nodejs18.x
      Handler: index.handler
      Timeout: 5
      AutoPublishAlias: live

  LambdaEdgeFunctionRole:
    Type: "AWS::IAM::Role"
    Properties:
      Path: "/"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowLambdaServiceToAssumeRole"
            Effect: "Allow"
            Action:
              - "sts:AssumeRole"
            Principal:
              Service:
                - "lambda.amazonaws.com"
                - "edgelambda.amazonaws.com"

Outputs:
  RestrictAndRedirectFunctionArn:
    Value: !Ref RestrictAndRedirectFunction.Version
